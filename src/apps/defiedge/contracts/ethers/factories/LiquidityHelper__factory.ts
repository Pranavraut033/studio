/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { LiquidityHelper, LiquidityHelperInterface } from '../LiquidityHelper';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pool',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: '_tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: '_tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: '_liquidity',
        type: 'uint128',
      },
    ],
    name: 'getAmountsForLiquidity',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount0',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount1',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pool',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: '_tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: '_tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: '_amount0',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_amount1',
        type: 'uint256',
      },
    ],
    name: 'getLiquidityForAmounts',
    outputs: [
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class LiquidityHelper__factory {
  static readonly abi = _abi;
  static createInterface(): LiquidityHelperInterface {
    return new utils.Interface(_abi) as LiquidityHelperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LiquidityHelper {
    return new Contract(address, _abi, signerOrProvider) as LiquidityHelper;
  }
}
